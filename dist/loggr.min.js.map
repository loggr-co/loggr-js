{"version":3,"sources":["webpack://Loggr/webpack/universalModuleDefinition","webpack://Loggr/webpack/bootstrap","webpack://Loggr/./index.ts","webpack://Loggr/../node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack://Loggr/../node_modules/whatwg-fetch/fetch.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fetch","Loggr","options","_this","log","level","line","meta","at","Date","now","app","host","method","headers","Content-Type","body","JSON","stringify","__assign","then","catch","error","console","info","warn","debug","success","critical","apiKey","self","__webpack_exports__","Headers","Request","Response","DOMException","support","searchParams","iterable","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","toString","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","type","rejected","Error","text","readAsText","chars","length","fromCharCode","join","readArrayBufferAsText","decode","json","parse","oldValue","has","callback","thisArg","keys","push","values","entries","methods","input","upcased","url","credentials","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill"],"mappings":"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","file":"loggr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Loggr\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Loggr\"] = factory();\n\telse\n\t\troot[\"Loggr\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as fetch from 'isomorphic-fetch'\n\nexport default class Loggr {\n    private readonly host: string\n    private readonly apiKey: string\n    private readonly app: string\n\n    constructor(options) {\n        this.host = options.host\n        this.apiKey = options.apiKey\n        this.app = options.app\n    }\n\n    log = (level, line) => {\n        const meta = {\n            at: Date.now(),\n            app: this.app,\n            level: level || 'INFO'\n        }\n        fetch(`${this.host}/api/log`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                meta,\n                ...line\n            })\n        })\n            .then()\n            .catch(error => console.log('Loggr: Failed to log', error))\n    }\n\n    info = line => {\n        this.log('INFO', line)\n    }\n\n    warn = line => {\n        this.log('WARN', line)\n    }\n\n    debug = line => {\n        this.log('DEBUG', line)\n    }\n\n    error = line => {\n        this.log('ERROR', line)\n    }\n\n    success = line => {\n        this.log('SUCCESS', line)\n    }\n\n    critical = line => {\n        this.log('CRITICAL', line)\n    }\n}\n","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n"],"sourceRoot":""}